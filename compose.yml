volumes:
  grafana_data:
  graphite_data:

networks:
  stats:
    driver: bridge

x-logging: &default-logging
  driver: "local"
  options:
    max-size: "20m"
    max-file: "5"

services:
  graphite:
    image: graphiteapp/graphite-statsd
    volumes:
      - ./config/graphite:/opt/graphite/conf
      - ./logs/graphite:/var/log
      - graphite_data:/opt/graphite/storage
    networks:
      - stats
    logging: *default-logging
  grafana:
    image: grafana/grafana-oss:9.3.6-ubuntu
    volumes:
      - ./config/grafana/grafana.ini:/etc/grafana/grafana.ini
      - ./config/grafana/provisioning:/etc/grafana/provisioning
      - ./logs/grafana:/var/log/grafana
      - grafana_data:/var/lib/grafana
      - ./secrets:/etc/secrets
    ports:
      - ${GRAFANA_PORT}:3000
    environment:
      - GF_SECURITY_ADMIN_USER=${ADMIN_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${ADMIN_PASSWORD}
      - GF_DOMAIN=${HOSTNAME}
      - GF_SMTP_FROM_ADDRESS=${EMAIL_ADDRESS}
      - GF_AUTH_ANONYMOUS_ENABLED=${ANONYMOUS_AUTH_ENABLED}
    healthcheck:
      test: "curl -fsSL -o /dev/null http://localhost:${GRAFANA_PORT}/login"
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - stats
    logging: *default-logging
  stats-getter:
    build:
      context: .
      dockerfile: ./src/pushStats/Dockerfile
    volumes:
      - ./logs/statsGetter:/app/logs
      - ./users.json:/app/users.json
    depends_on:
      - graphite
    environment:
      - PREFIX=${PREFIX}
      - SERVER_PORT=${SERVER_PORT}
      - PUSH_STATUS_PORT=${PUSH_STATUS_PORT}
    networks:
      - stats
    logging: *default-logging
